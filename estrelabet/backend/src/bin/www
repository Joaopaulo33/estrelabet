#!/usr/bin/env node


const { createApp } = require('../app');
const debug = require('debug')('backend-teste:server');
const http = require('http');


function normalizePort(val) {
  const port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }

  if (port >= 0) {
    return port;
  }

  return false;
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}


// function onListening() {
//  // const addr = server.address();
//   const bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
//   debug('Listening on ' + bind);
// }

async function start() {
  const app = await createApp();

  const port = normalizePort(process.env.PORT || '8081');
  console.log("Conectado na porta ",port);
  app.set('port', port);

  const server = http.createServer(app);

  server.listen(port);
  server.on('error', onError);
  // server.on('listening', onListening);
}

start();
